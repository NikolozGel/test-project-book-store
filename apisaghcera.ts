// აპლიკაციის აღწერა:
//     აპლიკაცია წარმოადგენს წიგნის მაღაზიას სადაც თითოეულ პროდუქტს აქვს ველები: დასახელება, აღწერა, ავტორი, კატეგორია, ფასი, uid(უნიკალური იდენტიფიკატორი).

//     მთავარი გვერდი:
//         მთავარ გვერდზე უნდა იყოს ფილტერის კომპონენტი რომელიც გაფილტრავს ყველა ველით გარდა uid.
//         უნდა შეიძლებოდეს სიის სორტირება ფასით.
//         ფილტრი უნდა შენარჩუნდეს ვებ-გვერდის განახლებამდე(refresh)
//         უნდა ჰქონდეს პეიჯინგი და ერთ გვერდზე უნდა ჩანდეს მაქსიმუმ თხუთმეტი ჩანაწერი.
//         კომპონენტს უნდა ჰქონდეს ოთხი მოქმედება : დეტალური ნახვა, წაშლა, რედაქტირება, კალათაში დამატება.

//     კალათის გვერდი:
//         კალათაში დამატებული პროდუქტები უნდა შენარჩუნდეს ვებ-გვერდის განახლების(refresh) შემდეგაც.
//         კალათის გვერდზე პროდუქტის ჩამონათვალს უნდა ქონდეს დამატებით რაოდენობა და ჯამური ფასი.(უნდა შეიძლებოდეს რაოდენობის ცვლილება)

//     პროდუქტის გვერდი:
//          პროდუქტს აქვს ხუთი ველი: დასახელება, აღწერა, ავტორი, კატეგორია, ფასი.
//          დამატების ან რედაქტირების შემდეგ ავტომატურად უნდა გადამისამართდეს მთავარ გვერდზე.
// გვერდები:
//     1. მთავარი გვერდი (პროდუქტების სია)
//     2. პროდუქტის დეტალური გვერდი
//     3. პროდუქტის დამატების გვერდი
//     4. პროდუქტის რედაქტირბის გვერდი
//     5. პროდუქტის კალათა
// გამოიყენებული ბიბლიოთეკები:
//     1. react-router-dom
//     2. json-server
//         1. proeqtSi შექმენი db.json ფაილი
//         2. npm install -g json-server
//         3. json-server --watch db.json --port 3001
//     3. axios

// დამატებითი ფუნქციონალი (optional):
//     search bar: დასახელებით სწრაფი ფილტრი

// პატივისცემით
// სერგი ნებიერიძე
